#!/usr/bin/lua

--! LibreMesh
--! Copyright (C) 2019  Gioacchino Mazzurco <gio@altermundi.net>
--!
--! This program is free software: you can redistribute it and/or modify
--! it under the terms of the GNU Affero General Public License as
--! published by the Free Software Foundation, either version 3 of the
--! License, or (at your option) any later version.
--!
--! This program is distributed in the hope that it will be useful,
--! but WITHOUT ANY WARRANTY; without even the implied warranty of
--! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--! GNU Affero General Public License for more details.
--!
--! You should have received a copy of the GNU Affero General Public License
--! along with this program.  If not, see <http://www.gnu.org/licenses/>.

local JSON = require("luci.jsonc")
local utils = require "lime.utils"
local mesh_upgrade = require "lime-mesh-upgrade"
local hostname = utils.hostname()

local indata = io.stdin:read("*all")
utils.printJson(JSON.parse(indata))
mesh_upgrade.verify_network_consistency(JSON.parse(indata))

--if already involved in an upgrade transaction do nothing
--[[
if not mesh_upgrade.started() then
	utils.log("async: starting an upgrade process")
	for node, s_s_data in pairs(JSON.parse(indata)) do
		--if any node has started an upgrade process and start one too?
		--only fetch the info from the master node publication?
		if node ~= hostname and s_s_data.main_node == mesh_upgrade.main_node_states.MAIN_NODE then
			utils.unsafe_shell('logger -p daemon.info -t "async: mesh upgrade" "mesh upgrade detected upgrade from ' ..
			s_s_data.repo_url .. " and masternode node  " .. node .. " with this data " .. JSON.stringify(s_s_data)..'"') 
			mesh_upgrade.become_bot_node(s_s_data)
		else
			utils.unsafe_shell('logger -p daemon.info -t "async: mesh upgrade" "status  "' ..
			JSON.stringify(s_s_data) .. " from node " .. node)
		end
	end
else
	--if started check that a main node has not aborted 
	for node, s_s_data in pairs(JSON.parse(indata)) do
		utils.unsafe_shell('logger -p daemon.info -t "async: mesh upgrade" "mesh upgrade detected upgrade from "' ..
			s_s_data.main_node .. " and masternode node  " .. node .. " with this data " .. JSON.stringify(s_s_data.data)) 
			utils.unsafe_shell('logger -p daemon.info -t "async: mesh upgrade" "mesh upgrade detected upgrade from "' ..
			s_s_data.main_node .. " and masternode node  " .. node .. " with this data " .. JSON.stringify(s_s_data.data)) 

		if node ~= hostname and 
		s_s_data.main_node == mesh_upgrade.main_node_states.MAIN_NODE and
		s_s_data.upgrade_state == mesh_upgrade.upgrade_states.ABORTED
		then
			mesh_upgrade.mesh_upgrade_abort()
			utils.unsafe_shell('logger -p daemon.info -t "async: mesh upgrade" "aborting, main has aborted"')
		end
	end
	utils.unsafe_shell('logger -p daemon.info -t "async: mesh upgrade" "already started an upgrade process"')
	utils.log("already started an upgrade process")
end
]]--
